{"version":3,"sources":["SelectedDataTable.js","Template.js","App.js","reportWebVitals.js","index.js"],"names":["SelectedDataTable","filteredData","label","isLoading","className","Spinner","animation","variant","length","id","colSpan","map","data","index","sessionData","sessions","name","pincode","session","ind","min_age_limit","session_id","vaccine","date","available_capacity","total_available_capacity","Template","Moment","require","App","useState","stateData","setStateData","districtData","setDistrictData","pinCodeArray","setPinCodeArray","selectedPinCodes","setSelectedPincodes","selectedState","setSelectedState","setCenterData","setFilteredData","filteredPincodeData","setFilteredPincodeData","keepAPICalling","setKeepAPICalling","loading","setLoading","apiError","setApiError","selectedDistrict","setSelectedDistrict","selectDataForAge","age","filter","getSelectedPincodeData","centers","selectedOption","filteredPinCodes","element","i","push","value","reduce","newData","includes","selectedAgeData","totalVaccine","sum","soundId","document","getElementById","play","addNotification","title","subtitle","message","theme","silent","native","sendNotificationForSelected","checkAPI","districtId","today","Date","format","fetch","then","resp","json","array","getDistrictPinCodes","getOtherData","catch","useEffect","states","statesData","state_id","state_name","selectState","stateId","districts","district_id","district_name","onChange","options","isMulti","Button","onClick","clearInterval","setInterval","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+QAsGeA,EArGW,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,MACvC,OAD8D,EAAhBC,UAElC,sBAAKC,UAAU,cAAf,UACJ,cAACC,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,YACpC,cAACF,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cACpC,cAACF,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,YACpC,cAACF,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,WACpC,cAACF,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,YACpC,cAACF,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,SACpC,cAACF,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,YAIxC,sBAAKH,UAAU,2DAAf,UACI,qBAAKA,UAAU,qDAAf,SAAqEF,IAEjED,EAAaO,OAAS,GACrB,wBAAOJ,UAAU,6EAA6EK,GAAG,MAAjG,UACG,wBAAOL,UAAU,0CAAjB,UACI,qBAAIA,UAAU,sDAAd,UACI,yCACA,wCACA,yCACA,oBAAIM,QAAQ,IAAZ,sBACA,mDAEJ,qBAAIN,UAAU,sDAAd,UACI,uBACA,uBACA,uBACA,qCACA,yCACA,sCACA,oDACA,6BAGR,gCACKH,EAAaU,KAAI,SAACC,EAAMC,GACrB,IAAMC,EAAcF,EAAKG,SACzB,OACI,qBAAgBX,UAAU,cAA1B,UACI,6BAAKS,EAAQ,IACb,6BAAKD,EAAKI,OACV,6BAAKJ,EAAKK,UACV,6BAEQH,EAAYH,KAAI,SAACO,EAASC,GACtB,OACI,8BACI,6BAAKD,EAAQE,iBADPF,EAAQG,iBAOlC,6BAEQP,EAAYH,KAAI,SAACO,EAASC,GACtB,OACI,8BACI,6BAAKD,EAAQI,WADPJ,EAAQG,iBAOlC,6BAEQP,EAAYH,KAAI,SAACO,EAASC,GACtB,OACI,8BACI,6BAAKD,EAAQK,QADPL,EAAQG,iBAOlC,6BAEQP,EAAYH,KAAI,SAACO,EAASC,GACtB,OACI,8BAEI,6BAAKD,EAAQM,sBAFPN,EAAQG,iBAQlC,6BAAKT,EAAKa,6BAjDLZ,eCd1Ba,EA5BE,WACb,OACI,qCACI,mBAAGtB,UAAU,WAAb,wWAKA,mBAAGA,UAAU,WAAb,qCAGA,mBAAGA,UAAU,WAAb,SACI,+BACI,+GACA,kKACA,qGACA,0NACA,6HAGR,mBAAGA,UAAU,WAAb,yJCZNuB,EAASC,EAAQ,IAuPRC,MArPf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAgDN,mBAAS,IAAzD,mBAAOO,EAAP,KAAyBC,EAAzB,KACA,EAA0CR,mBAAS,IAAnD,mBAAOS,EAAP,KAAsBC,EAAtB,KACA,EAAoCV,mBAAS,IAA7C,mBAAmBW,GAAnB,WACA,EAAwCX,mBAAS,IAAjD,mBAAO7B,EAAP,KAAqByC,EAArB,KACA,EAAsDZ,mBAAS,IAA/D,mBAAOa,EAAP,KAA4BC,EAA5B,KACA,EAA4Cd,qBAA5C,mBAAOe,EAAP,KAAuBC,EAAvB,KACA,EAA8BhB,oBAAS,GAAvC,mBAAOiB,EAAP,KAAgBC,EAAhB,KACA,EAAgClB,oBAAS,GAAzC,mBAAOmB,EAAP,KAAiBC,EAAjB,KACA,EAAgDpB,mBAAS,IAAzD,oBAAOqB,GAAP,MAAyBC,GAAzB,MAEMC,GAAmB,SAACzC,EAAM0C,GAC9B,OAAKA,EAGE1C,EAAK2C,QAAO,qBAAGnC,gBAAsCkC,KAFnD1C,GAuBL4C,GAAyB,SAACC,EAASpB,GACvCW,GAAW,GACX,IAAQU,EAAmBrB,EAAnBqB,eACFC,EAAmB,GACzBD,GAAkBA,EAAelD,OAAS,GAAKkD,EAAeH,QAAO,SAACK,EAASC,GAC7EF,EAAiBG,KAAKF,EAAQG,UAEhC,IAAM9D,EAAewD,EAAQO,QAAO,SAACC,EAAD,GAA2C,IAA/BjD,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAASF,EAAe,EAAfA,SAC7D,GAAI4C,EAAiBO,SAASjD,GAAU,CACtC,IAAMkD,EAAkBd,GAAiBtC,GACzC,GAAIoD,EAAgB3D,OAAQ,CAC1B,IAAM4D,EAAeD,EAAgBH,QAAO,SAACK,EAAD,UAAiCA,EAAjC,EAAQ7C,qBAAmD,GAIvG,OAHI4C,GA7BwB,SAACnD,EAASD,EAAM2C,GAClD,GAAIA,EAAiBO,SAASjD,GAAU,CACtC,IAAMqD,EAAUC,SAASC,eAAe,eACpCF,GACFA,EAAQG,OAEVC,IAAgB,CACdC,MAAO1D,EACP2D,SAAU5D,EACV6D,QAAS7D,EACT8D,MAAO,WACPC,QAAQ,EACRC,QAAQ,KAkBJC,CAA4BhE,EAASD,EAAM2C,GAEvC,GAAN,mBACKM,GADL,CAEE,CACEjD,OACAC,UACAF,WACAU,yBAA0B2C,KAIhC,OAAOH,EAET,OAAOA,IACN,IACHrB,EAAuB3C,GACvB+C,GAAW,IA4CPkC,GAAW,SAACC,GAChBnC,GAAW,GACX,IAAMoC,EAAQzD,EAAO,IAAI0D,MAAQC,OAAO,cACxCC,MAAM,wFAAD,OAAyFJ,EAAzF,iBAA4GC,IAC9GI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAA5E,GACJ,IAAQ6C,EAAY7C,EAAZ6C,QACJA,EAAQjD,OAAS,IACnBiC,EAAcgB,GA7BM,SAACA,GAC3B,IAAMkC,EAAQ,GACdlC,EAAQ9C,KAAI,SAACiD,GACX,OAAO+B,EAAM7B,KAAK,CAAE,MAASF,EAAQ3C,QAASf,MAAO0D,EAAQ3C,aAE/DmB,EAAgBuD,GAyBVC,CAAoBnC,GAlDP,SAACA,GACpB,IAAMxD,EAAewD,EAAQO,QAAO,SAACC,EAAD,GAA2C,IAA/BjD,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAASF,EAAe,EAAfA,SACvDoD,EAAkBd,GAAiBtC,GACzC,GAAIoD,EAAgB3D,OAAQ,CAC1B,IAAM4D,EAAeD,EAAgBH,QAAO,SAACK,EAAD,UAAiCA,EAAjC,EAAQ7C,qBAAmD,GACvG,MAAM,GAAN,mBACKyC,GADL,CAEE,CACEjD,OACAC,UACAF,WACAU,yBAA0B2C,KAIhC,OAAOH,IACN,IACHvB,EAAgBzC,GAkCV4F,CAAapC,GACbT,GAAW,OAEZ8C,OAAM,WACP5C,GAAY,GACZF,GAAW,OAGjB+C,qBAAU,WACRR,MAAM,0DACHC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAA5E,GACJ,IAAQoF,EAAWpF,EAAXoF,OACFL,EAAQ,GACdK,EAAOrF,KAAI,SAACsF,GACVN,EAAM7B,KAAK,CAAE,MAASmC,EAAWC,SAAUhG,MAAO+F,EAAWE,gBAE/DnE,EAAa2D,QAEhB,IAEH,IAAMS,GAAc,SAACC,GACnBd,MAAM,6DAAD,OAA8Dc,IAChEb,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAA5E,GACJ,IAAQ0F,EAAc1F,EAAd0F,UACFX,EAAQ,GACdW,EAAU3F,KAAI,SAACsB,GACb,OAAO0D,EAAM7B,KAAK,CAAE,MAAS7B,EAAasE,YAAarG,MAAO+B,EAAauE,mBAE7EtE,EAAgByD,OAyBtB,OACE,sBAAKvF,UAAU,OAAf,UACE,wBAAQA,UAAU,qDAAlB,SACE,qEAEF,qBAAKA,UAAU,0CAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,wDAAf,UACE,sBAAKA,UAAU,wCAAf,UACE,qBAAKA,UAAU,6DAAf,SACE,mDAEF,cAAC,IAAD,CACE2D,MAAOxB,EAAc2D,SACrBO,SA1FgB,SAAA/C,GACxBlB,EAAiB,CAAEkB,mBACnB0C,GAAY1C,EAAeK,QAyFnB2C,QAAS3E,OAGb,sBAAK3B,UAAU,wCAAf,UACE,qBAAKA,UAAU,6DAAf,SACE,4DAEF,cAAC,IAAD,CACE2D,MAAOxB,EAAcgE,YACrBE,SA/FmB,SAAA/C,GAC3BN,GAAoBM,GACpBwB,GAASxB,EAAeK,MAAO1B,EAAiBqB,iBA8FxCgD,QAASzE,OAGb,sBAAK7B,UAAU,wCAAf,UACE,qBAAKA,UAAU,6DAAf,SACE,8DAEF,cAAC,IAAD,CACE2D,MAAO1B,EAAiBpB,QACxBwF,SAlHW,SAAA/C,GACnBpB,EAAoB,CAAEoB,oBAkHdgD,QAASvE,EACTwE,SAAO,OAGX,sBAAKvG,UAAU,cAAf,UACE,qBAAKA,UAAU,GAAf,SACE,gCAAQ,QAEV,qBAAKA,UAAU,MAAf,SAAqB,cAACwG,EAAA,EAAD,CAAQC,QAjEf,WAChBhE,GAAkBiE,cAAcjE,GACpCC,EAAkBiE,aAAY,WAC5B,IAAM3B,EAAQzD,EAAO,IAAI0D,MAAQC,OAAO,cAClCH,EAAahC,GAAiBY,MACpCwB,MAAM,wFAAD,OAAyFJ,EAAzF,iBAA4GC,IAChHI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAA5E,GACJ,IAAQ6C,EAAY7C,EAAZ6C,QACJA,EAAQjD,OAAS,GACnBgD,GAAuBC,EAASpB,QAInC,OAmDwD9B,QAAQ,UAAxC,wBAEvB,sBAAKH,UAAU,cAAf,UACE,qBAAKA,UAAU,GAAf,SACE,gCAAQ,QAEV,qBAAKA,UAAU,MAAf,SAAqB,cAACwG,EAAA,EAAD,CAAQC,QAtDhB,WACfhE,GAAkBiE,cAAcjE,IAqDsBtC,QAAQ,UAAvC,uCAGxB0C,GAAoC,IAAxBhD,EAAaO,OACxB,qBAAKJ,UAAU,0CAAf,SACE,uBAAOA,UAAU,cAAjB,iDAGF,sBAAKA,UAAU,0CAAf,UACGuC,EAAoBnC,OAAS,GAAM,cAAC,EAAD,CAAmBP,aAAc0C,EAAqBzC,MAAK,gBAAmBC,UAAW4C,IAC5H9C,EAAaO,OAAS,GAAM,cAAC,EAAD,CAAmBP,aAAcA,EAAcC,MAAK,aAAgBC,UAAW4C,WC5OvGiE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnD,SAASC,eAAe,SAM1BwC,M","file":"static/js/main.01f9c089.chunk.js","sourcesContent":["import { Spinner } from 'react-bootstrap';\r\nconst SelectedDataTable = ({ filteredData, label, isLoading }) => {\r\n    if (isLoading) {\r\n        return (<div className=\"text-center\">\r\n            <Spinner animation=\"border\" variant=\"primary\" />\r\n            <Spinner animation=\"border\" variant=\"secondary\" />\r\n            <Spinner animation=\"border\" variant=\"success\" />\r\n            <Spinner animation=\"border\" variant=\"danger\" />\r\n            <Spinner animation=\"border\" variant=\"warning\" />\r\n            <Spinner animation=\"border\" variant=\"info\" />\r\n            <Spinner animation=\"border\" variant=\"dark\" />\r\n        </div>)\r\n    }\r\n    return (\r\n        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 table-responsive\">\r\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 tableLabel\">{label}</div>\r\n            {\r\n                filteredData.length > 0 &&\r\n                (<table className=\"table table-striped table-bordered col-lg-12 col-md-12 col-sm-12 col-xs-12\" id=\"tbl\">\r\n                    <thead className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                        <tr className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 text-center\">\r\n                            <th >Sr. No.</th>\r\n                            <th >Center</th>\r\n                            <th >Pincode</th>\r\n                            <th colSpan=\"4\">Capacity</th>\r\n                            <th >Available Dose</th>\r\n                        </tr>\r\n                        <tr className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 text-center\">\r\n                            <th ></th>\r\n                            <th ></th>\r\n                            <th ></th>\r\n                            <th >Age</th>\r\n                            <th >Vaccine</th>\r\n                            <th >Date</th>\r\n                            <th >Available Capacity</th>\r\n                            <th ></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {filteredData.map((data, index) => {\r\n                            const sessionData = data.sessions\r\n                            return (\r\n                                <tr key={index} className=\"text-center\">\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{data.name}</td>\r\n                                    <td>{data.pincode}</td>\r\n                                    <td>\r\n                                        {\r\n                                            sessionData.map((session, ind) => {\r\n                                                return (\r\n                                                    <div key={session.session_id}>\r\n                                                        <tr>{session.min_age_limit}</tr>\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        {\r\n                                            sessionData.map((session, ind) => {\r\n                                                return (\r\n                                                    <div key={session.session_id}>\r\n                                                        <tr>{session.vaccine}</tr>\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        {\r\n                                            sessionData.map((session, ind) => {\r\n                                                return (\r\n                                                    <div key={session.session_id}>\r\n                                                        <tr>{session.date}</tr>\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        {\r\n                                            sessionData.map((session, ind) => {\r\n                                                return (\r\n                                                    <div key={session.session_id}>\r\n\r\n                                                        <tr>{session.available_capacity}</tr>\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </td>\r\n                                    <td>{data.total_available_capacity}</td>\r\n                                </tr>)\r\n                        })\r\n                        }\r\n                    </tbody>\r\n                </table>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedDataTable","const Template = () => {\r\n    return (\r\n        <>\r\n            <p className=\"template\">\r\n                Just thought of making a small application which can be run from any machine without having to install any additional software. It will display real-time Vaccine Availability on Selected pincodes as well as other nearby pincodes.\r\n\r\n                Please note - this provide very limited functionality. I just developed it to help people find vaccines more easily.\r\n            </p>\r\n            <p className=\"template\">\r\n                All you have to do is -\r\n                </p>\r\n            <p className=\"template\">\r\n                <ul>\r\n                    <li>Step 1 : Select State. It shall show you the list of cities in next dropdown.</li>\r\n                    <li>Step 2 : Select City/ District. It shall show you the list pincodes where the vaccines are currently available in that district.</li>\r\n                    <li>Step 3 : Select multiple pincodes that is closest to your location.</li>\r\n                    <li>Step 4 : Hit 'Track' button. It should start fetching the data from Cowin website every 2 seconds. and the table will get reflected in real-time and notification with sound will pop up</li>\r\n                    <li>Step 5 : Hit 'Stop Notification' button. It should stop notification pop-up and sound.</li>\r\n                </ul>\r\n            </p>\r\n            <p className=\"template\">\r\n                *Note -\r\n                Notification pop-up will only appear for selected pincode data. But user will be able to see both filtered and unfiltered data.\r\n            </p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Template\r\n","import './style.css';\nimport { Button } from 'react-bootstrap';\nimport { useEffect, useState } from 'react'\nimport Select from 'react-select';\nimport addNotification from 'react-push-notification';\nimport SelectedDataTable from './SelectedDataTable'\nimport Template from './Template'\n\nconst Moment = require(\"moment\")\n\nfunction App() {\n  const [stateData, setStateData] = useState([])\n  const [districtData, setDistrictData] = useState([])\n  const [pinCodeArray, setPinCodeArray] = useState([])\n  const [selectedPinCodes, setSelectedPincodes] = useState([])\n  const [selectedState, setSelectedState] = useState([])\n  const [centerData, setCenterData] = useState([])\n  const [filteredData, setFilteredData] = useState([])\n  const [filteredPincodeData, setFilteredPincodeData] = useState([])\n  const [keepAPICalling, setKeepAPICalling] = useState()\n  const [loading, setLoading] = useState(false)\n  const [apiError, setApiError] = useState(false)\n  const [selectedDistrict, setSelectedDistrict] = useState([])\n\n  const selectDataForAge = (data, age) => {\n    if (!age) {\n      return data\n    }\n    return data.filter(({ min_age_limit }) => min_age_limit === age);\n  };\n\n\n  const sendNotificationForSelected = (pincode, name, filteredPinCodes) => {\n    if (filteredPinCodes.includes(pincode)) {\n      const soundId = document.getElementById(\"notif_sound\");\n      if (soundId) {\n        soundId.play();\n      }\n      addNotification({\n        title: pincode,\n        subtitle: name,\n        message: name,\n        theme: \"darkblue\",\n        silent: false,\n        native: true\n      });\n    }\n  }\n\n  const getSelectedPincodeData = (centers, selectedPinCodes) => {\n    setLoading(true)\n    const { selectedOption } = selectedPinCodes\n    const filteredPinCodes = [];\n    selectedOption && selectedOption.length > 0 && selectedOption.filter((element, i) => {\n      filteredPinCodes.push(element.value)\n    })\n    const filteredData = centers.reduce((newData, { name, pincode, sessions }) => {\n      if (filteredPinCodes.includes(pincode)) {\n        const selectedAgeData = selectDataForAge(sessions);\n        if (selectedAgeData.length) {\n          const totalVaccine = selectedAgeData.reduce((sum, { available_capacity }) => sum + available_capacity, 0);\n          if (totalVaccine) {\n            sendNotificationForSelected(pincode, name, filteredPinCodes);\n          }\n          return [\n            ...newData,\n            {\n              name,\n              pincode,\n              sessions,\n              total_available_capacity: totalVaccine\n            }\n          ];\n        }\n        return newData;\n      }\n      return newData;\n    }, []);\n    setFilteredPincodeData(filteredData)\n    setLoading(false)\n  }\n\n  const getOtherData = (centers) => {\n    const filteredData = centers.reduce((newData, { name, pincode, sessions }) => {\n      const selectedAgeData = selectDataForAge(sessions);\n      if (selectedAgeData.length) {\n        const totalVaccine = selectedAgeData.reduce((sum, { available_capacity }) => sum + available_capacity, 0);\n        return [\n          ...newData,\n          {\n            name,\n            pincode,\n            sessions,\n            total_available_capacity: totalVaccine\n          }\n        ];\n      }\n      return newData;\n    }, []);\n    setFilteredData(filteredData)\n  }\n\n  const getDistrictPinCodes = (centers) => {\n    const array = []\n    centers.map((element) => {\n      return array.push({ 'value': element.pincode, label: element.pincode })\n    })\n    setPinCodeArray(array)\n  }\n  const handleChange = selectedOption => {\n    setSelectedPincodes({ selectedOption });\n  };\n\n  const handleChangeState = selectedOption => {\n    setSelectedState({ selectedOption });\n    selectState(selectedOption.value)\n  };\n\n  const handleChangeDistrict = selectedOption => {\n    setSelectedDistrict(selectedOption)\n    checkAPI(selectedOption.value, selectedPinCodes.selectedOption)\n  };\n\n  const checkAPI = (districtId) => {\n    setLoading(true)\n    const today = Moment(new Date()).format(\"DD-MM-YYYY\");\n    fetch(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/calendarByDistrict?district_id=${districtId}&date=${today}`)\n      .then(resp => resp.json())\n      .then(data => {\n        const { centers } = data\n        if (centers.length > 0) {\n          setCenterData(centers)\n          getDistrictPinCodes(centers)\n          getOtherData(centers)\n          setLoading(false)\n        }\n      }).catch(() => {\n        setApiError(true)\n        setLoading(false)\n      });\n  };\n  useEffect(() => {\n    fetch(`https://cdn-api.co-vin.in/api/v2/admin/location/states`)\n      .then(resp => resp.json())\n      .then(data => {\n        const { states } = data\n        const array = []\n        states.map((statesData) => {\n          array.push({ 'value': statesData.state_id, label: statesData.state_name })\n        })\n        setStateData(array)\n      });\n  }, [])\n\n  const selectState = (stateId) => {\n    fetch(`https://cdn-api.co-vin.in/api/v2/admin/location/districts/${stateId}`)\n      .then(resp => resp.json())\n      .then(data => {\n        const { districts } = data\n        const array = []\n        districts.map((districtData) => {\n          return array.push({ 'value': districtData.district_id, label: districtData.district_name })\n        })\n        setDistrictData(array)\n      });\n  }\n\n  const startTracking = () => {\n    if (keepAPICalling) { clearInterval(keepAPICalling) }\n    setKeepAPICalling(setInterval(() => {\n      const today = Moment(new Date()).format(\"DD-MM-YYYY\");\n      const districtId = selectedDistrict.value;\n      fetch(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/calendarByDistrict?district_id=${districtId}&date=${today}`)\n      .then(resp => resp.json())\n      .then(data => {\n        const { centers } = data\n        if (centers.length > 0) {\n          getSelectedPincodeData(centers, selectedPinCodes)\n        }\n      })\n     \n    }, 2000));\n  }\n\n  const stopTracking = () => {\n    if (keepAPICalling) { clearInterval(keepAPICalling) }\n  }\n\n  return (\n    <div className=\"App \" >\n      <header className=\"App-header col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <h3>Welcome To Vaccine Notification !</h3>\n      </header>\n      <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <Template />\n      </div>\n      <div className=\"row col-lg-12 col-md-12 col-sm-12 col-xs-12 selectBox\">\n        <div className=\"col-lg-3 col-md-3 col-sm-12 col-xs-12\">\n          <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 row row-no-padding\">\n            <label>Select State</label>\n          </div>\n          <Select\n            value={selectedState.state_id}\n            onChange={handleChangeState}\n            options={stateData}\n          />\n        </div>\n        <div className=\"col-lg-2 col-md-3 col-sm-12 col-xs-12\">\n          <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 row row-no-padding\">\n            <label>Select City/ District</label>\n          </div>\n          <Select\n            value={selectedState.district_id}\n            onChange={handleChangeDistrict}\n            options={districtData}\n          />\n        </div>\n        <div className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12\">\n          <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 row row-no-padding\">\n            <label>Select Nearest Pincodes</label>\n          </div>\n          <Select\n            value={selectedPinCodes.pincode}\n            onChange={handleChange}\n            options={pinCodeArray}\n            isMulti\n          />\n        </div>\n        <div className=\"text-center\">\n          <div className=\"\">\n            <label>{' '}</label>\n          </div>\n          <div className=\"btn\"><Button onClick={startTracking} variant=\"primary\">Track</Button></div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"\">\n            <label>{' '}</label>\n          </div>\n          <div className=\"btn\"><Button onClick={stopTracking} variant=\"primary\">Stop Notification</Button></div>\n        </div>\n      </div>\n      {apiError && filteredData.length === 0 ?\n        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n          <label className=\"text-danger\">Data not available at the moment!</label>\n        </div>\n        :\n        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n          {filteredPincodeData.length > 0 && (<SelectedDataTable filteredData={filteredPincodeData} label={`Filtered Data`} isLoading={loading} />)}\n          {filteredData.length > 0 && (<SelectedDataTable filteredData={filteredData} label={`Other Data`} isLoading={loading} />)}\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}